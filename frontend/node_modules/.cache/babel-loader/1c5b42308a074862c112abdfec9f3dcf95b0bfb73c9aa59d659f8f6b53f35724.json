{"ast":null,"code":"var _jsxFileName = \"/Users/SarthakSethi/SOFTWARE FOR DANIER /danier-stock-alert/frontend/src/components/ThresholdManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { API_BASE_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThresholdManager = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [options, setOptions] = useState({\n    colors: [],\n    sizes: []\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const loadAll = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch(`${API_BASE_URL}/thresholds/all`);\n      const data = await response.json();\n      setItems(data.thresholds || []);\n    } catch (e) {\n      setError('Failed to load thresholds');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    loadAll();\n  }, []);\n  const fetchOptions = async name => {\n    try {\n      const res = await fetch(`${API_BASE_URL}/key-items/options/${encodeURIComponent(name)}`);\n      const data = await res.json();\n      setOptions({\n        colors: data.colors || [],\n        sizes: data.sizes || []\n      });\n    } catch (e) {\n      // ignore\n    }\n  };\n  const saveThreshold = async (itemName, size, color, threshold) => {\n    const body = {\n      item_name: itemName,\n      size,\n      color,\n      threshold\n    };\n    const response = await fetch(`${API_BASE_URL}/thresholds/set`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    if (!response.ok) throw new Error('Failed to save');\n  };\n  const resetThreshold = async (itemName, size, color) => {\n    const response = await fetch(`${API_BASE_URL}/thresholds/reset/${encodeURIComponent(itemName)}/${encodeURIComponent(size)}/${encodeURIComponent(color)}`, {\n      method: 'POST'\n    });\n    if (!response.ok) throw new Error('Failed to reset');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Threshold Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-600 text-sm\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadAll,\n      className: \"px-3 py-2 bg-blue-600 text-white rounded mb-4\",\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-2\",\n      children: items.map((it, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"border rounded p-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold\",\n          children: it.item_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: [it.size, \" \\u2022 \", it.color, \" \\u2022 threshold: \", it.threshold]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-2 py-1 border rounded\",\n            onClick: () => fetchOptions(it.item_name),\n            children: \"Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-2 py-1 border rounded\",\n            onClick: () => saveThreshold(it.item_name, it.size, it.color, it.threshold),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-2 py-1 border rounded\",\n            onClick: () => resetThreshold(it.item_name, it.size, it.color),\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-sm\",\n      children: [\"Options: colors \", options.colors.length, \", sizes \", options.sizes.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(ThresholdManager, \"+oCg2mjmGPdQqPnM0X7/g3gINAM=\");\n_c = ThresholdManager;\nexport default ThresholdManager;\nvar _c;\n$RefreshReg$(_c, \"ThresholdManager\");","map":{"version":3,"names":["React","useEffect","useState","API_BASE_URL","jsxDEV","_jsxDEV","ThresholdManager","_s","items","setItems","options","setOptions","colors","sizes","loading","setLoading","error","setError","loadAll","response","fetch","data","json","thresholds","e","fetchOptions","name","res","encodeURIComponent","saveThreshold","itemName","size","color","threshold","body","item_name","method","headers","JSON","stringify","ok","Error","resetThreshold","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","it","idx","length","_c","$RefreshReg$"],"sources":["/Users/SarthakSethi/SOFTWARE FOR DANIER /danier-stock-alert/frontend/src/components/ThresholdManager.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { API_BASE_URL } from '../config';\n\nconst ThresholdManager = () => {\n  const [items, setItems] = useState([]);\n  const [options, setOptions] = useState({ colors: [], sizes: [] });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const loadAll = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch(`${API_BASE_URL}/thresholds/all`);\n      const data = await response.json();\n      setItems(data.thresholds || []);\n    } catch (e) {\n      setError('Failed to load thresholds');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => { loadAll(); }, []);\n\n  const fetchOptions = async (name) => {\n    try {\n      const res = await fetch(`${API_BASE_URL}/key-items/options/${encodeURIComponent(name)}`);\n      const data = await res.json();\n      setOptions({ colors: data.colors || [], sizes: data.sizes || [] });\n    } catch (e) {\n      // ignore\n    }\n  };\n\n  const saveThreshold = async (itemName, size, color, threshold) => {\n    const body = { item_name: itemName, size, color, threshold };\n    const response = await fetch(`${API_BASE_URL}/thresholds/set`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body)\n    });\n    if (!response.ok) throw new Error('Failed to save');\n  };\n\n  const resetThreshold = async (itemName, size, color) => {\n    const response = await fetch(`${API_BASE_URL}/thresholds/reset/${encodeURIComponent(itemName)}/${encodeURIComponent(size)}/${encodeURIComponent(color)}`, {\n      method: 'POST'\n    });\n    if (!response.ok) throw new Error('Failed to reset');\n  };\n\n  return (\n    <div className=\"p-6\">\n      <h2 className=\"text-xl font-semibold mb-4\">Threshold Manager</h2>\n      {loading && <div>Loading...</div>}\n      {error && <div className=\"text-red-600 text-sm\">{error}</div>}\n      <button onClick={loadAll} className=\"px-3 py-2 bg-blue-600 text-white rounded mb-4\">Refresh</button>\n      <ul className=\"space-y-2\">\n        {items.map((it, idx) => (\n          <li key={idx} className=\"border rounded p-3\">\n            <div className=\"font-semibold\">{it.item_name}</div>\n            <div className=\"text-sm text-gray-600\">{it.size} • {it.color} • threshold: {it.threshold}</div>\n            <div className=\"mt-2 flex gap-2\">\n              <button className=\"px-2 py-1 border rounded\" onClick={() => fetchOptions(it.item_name)}>Options</button>\n              <button className=\"px-2 py-1 border rounded\" onClick={() => saveThreshold(it.item_name, it.size, it.color, it.threshold)}>Save</button>\n              <button className=\"px-2 py-1 border rounded\" onClick={() => resetThreshold(it.item_name, it.size, it.color)}>Reset</button>\n            </div>\n          </li>\n        ))}\n      </ul>\n      <div className=\"mt-4 text-sm\">\n        Options: colors {options.colors.length}, sizes {options.sizes.length}\n      </div>\n    </div>\n  );\n};\n\nexport default ThresholdManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}