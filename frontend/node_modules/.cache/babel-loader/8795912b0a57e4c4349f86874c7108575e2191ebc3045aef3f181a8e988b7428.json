{"ast":null,"code":"var _jsxFileName = \"/Users/SarthakSethi/SOFTWARE FOR DANIER /danier-stock-alert/frontend/src/components/ThresholdManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { API_BASE_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThresholdManager = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [overrides, setOverrides] = useState([]);\n  const [options, setOptions] = useState({\n    colors: [],\n    sizes: [],\n    color_to_sizes: {},\n    size_to_colors: {}\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Create form state\n  const [itemName, setItemName] = useState('');\n  const [availableItemNames, setAvailableItemNames] = useState([]);\n  const [size, setSize] = useState('');\n  const [color, setColor] = useState('');\n  const [threshold, setThreshold] = useState('');\n\n  // History\n  const [history, setHistory] = useState([]);\n  const loadAll = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch(`${API_BASE_URL}/thresholds/all`);\n      const data = await response.json();\n      let list = [];\n      if (Array.isArray(data.custom_thresholds)) {\n        list = data.custom_thresholds;\n      } else if (data.raw_thresholds && typeof data.raw_thresholds === 'object') {\n        list = Object.entries(data.raw_thresholds).map(([key, threshold]) => {\n          const [item_name, size, color] = key.split('|');\n          return {\n            key,\n            item_name,\n            size,\n            color,\n            threshold\n          };\n        });\n      }\n      setItems(list);\n      // Try to fetch overrides directly (if backend deployed)\n      try {\n        const o = await fetch(`${API_BASE_URL}/thresholds/overrides`);\n        if (o.ok) {\n          const oj = await o.json();\n          setOverrides(oj.overrides || []);\n        }\n      } catch {}\n    } catch (e) {\n      setError('Failed to load thresholds');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    loadAll();\n  }, []);\n  const loadItemNames = async () => {\n    try {\n      const res = await fetch(`${API_BASE_URL}/key-items/summary`);\n      const data = await res.json();\n      const names = (data.key_items || []).map(k => k.name).filter(Boolean).sort();\n      setAvailableItemNames(names);\n    } catch {}\n  };\n  const fetchOptions = async name => {\n    try {\n      const res = await fetch(`${API_BASE_URL}/key-items/options/${encodeURIComponent(name)}`);\n      const data = await res.json();\n      setOptions({\n        colors: data.colors || [],\n        sizes: data.sizes || [],\n        color_to_sizes: data.color_to_sizes || {},\n        size_to_colors: data.size_to_colors || {}\n      });\n    } catch (e) {\n      setOptions({\n        colors: [],\n        sizes: [],\n        color_to_sizes: {},\n        size_to_colors: {}\n      });\n    }\n  };\n  const saveThreshold = async (itemName, size, color, threshold) => {\n    const form = new FormData();\n    form.append('item_name', itemName);\n    form.append('size', size);\n    form.append('color', color);\n    form.append('threshold', String(threshold));\n    const response = await fetch(`${API_BASE_URL}/thresholds/set`, {\n      method: 'POST',\n      body: form\n    });\n    if (!response.ok) throw new Error('Failed to save');\n    window.dispatchEvent(new CustomEvent('thresholdsUpdated'));\n    await loadAll();\n    await loadHistory(itemName);\n  };\n  const resetThreshold = async (itemName, size, color) => {\n    const response = await fetch(`${API_BASE_URL}/thresholds/reset/${encodeURIComponent(itemName)}/${encodeURIComponent(size)}/${encodeURIComponent(color)}`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) throw new Error('Failed to reset');\n    window.dispatchEvent(new CustomEvent('thresholdsUpdated'));\n    await loadAll();\n    await loadHistory(itemName);\n  };\n  const loadHistory = async name => {\n    try {\n      const res = await fetch(`${API_BASE_URL}/thresholds/history?item_name=${encodeURIComponent(name)}&limit=50`);\n      if (!res.ok) {\n        setHistory([]);\n        return;\n      }\n      const data = await res.json();\n      setHistory(data.history || []);\n    } catch {\n      setHistory([]);\n    }\n  };\n\n  // Derived filtered options for UX\n  const sizesForColor = color && options.color_to_sizes[color] ? options.color_to_sizes[color] : options.sizes;\n  const colorsForSize = size && options.size_to_colors[size] ? options.size_to_colors[size] : options.colors;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Threshold Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-600 text-sm\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded border p-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold mb-3\",\n        children: \"Create or Update Threshold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-5 gap-2 items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-span-2 flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: itemName,\n            onChange: e => {\n              setItemName(e.target.value);\n              setSize('');\n              setColor('');\n              setOptions({\n                colors: [],\n                sizes: [],\n                color_to_sizes: {},\n                size_to_colors: {}\n              });\n            },\n            placeholder: \"Item name (e.g., RONAN)\",\n            className: \"flex-1 border rounded px-3 py-2\",\n            onFocus: loadItemNames,\n            onBlur: () => {/* keep */},\n            list: \"itemNames\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"itemNames\",\n            children: availableItemNames.map(n => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: n\n            }, n, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 44\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-2 border rounded\",\n            onClick: () => {\n              if (itemName.trim()) {\n                fetchOptions(itemName.trim());\n                loadHistory(itemName.trim());\n              }\n            },\n            children: \"Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: size,\n          onChange: e => setSize(e.target.value),\n          className: \"border rounded px-2 py-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), sizesForColor.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: s,\n            children: s\n          }, s, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 40\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: color,\n          onChange: e => setColor(e.target.value),\n          className: \"border rounded px-2 py-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), colorsForSize.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: c,\n            children: c\n          }, c, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 40\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: threshold,\n          onChange: e => setThreshold(e.target.value),\n          placeholder: \"Threshold\",\n          className: \"border rounded px-2 py-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-4 py-2 bg-blue-600 text-white rounded\",\n          onClick: async () => {\n            const t = parseInt(threshold, 10);\n            if (!itemName || !size || !color || Number.isNaN(t) || t < 0) return;\n            try {\n              await saveThreshold(itemName.trim(), size, color, t);\n            } catch {}\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-500 mt-2\",\n        children: [\"Options: colors \", options.colors.length, \", sizes \", options.sizes.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold\",\n          children: \"Existing Overrides\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadAll,\n          className: \"px-3 py-2 bg-blue-600 text-white rounded\",\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), items.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-600 text-sm\",\n        children: \"No custom thresholds set yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-2\",\n        children: items.map((it, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"border rounded p-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-semibold\",\n            children: it.item_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600\",\n            children: [it.size, \" \\u2022 \", it.color]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              defaultValue: it.threshold,\n              min: \"0\",\n              className: \"w-24 border rounded px-2 py-1 text-sm\",\n              onBlur: async e => {\n                const newVal = parseInt(e.target.value, 10);\n                if (!Number.isNaN(newVal) && newVal >= 0 && newVal !== it.threshold) {\n                  try {\n                    await saveThreshold(it.item_name, it.size, it.color, newVal);\n                  } catch {}\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-2 py-1 border rounded\",\n              onClick: () => fetchOptions(it.item_name),\n              children: \"Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-2 py-1 border rounded\",\n              onClick: () => resetThreshold(it.item_name, it.size, it.color),\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold mb-2\",\n        children: [\"Recent Changes \", itemName ? `(for ${itemName})` : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), history.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-600 text-sm\",\n        children: \"No history yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-1 text-sm\",\n        children: history.map((h, i) => {\n          var _h$old_threshold;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"border rounded p-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-medium\",\n              children: [h.item_name, \" \\u2022 \", h.size, \" \\u2022 \", h.color]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-700\",\n              children: [(_h$old_threshold = h.old_threshold) !== null && _h$old_threshold !== void 0 ? _h$old_threshold : 'default', \" \\u2192 \", h.new_threshold, \" at \", h.changed_at]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(ThresholdManager, \"pWfSXS6qtyShdfxLeEtDFwMsIjA=\");\n_c = ThresholdManager;\nexport default ThresholdManager;\nvar _c;\n$RefreshReg$(_c, \"ThresholdManager\");","map":{"version":3,"names":["React","useEffect","useState","API_BASE_URL","jsxDEV","_jsxDEV","ThresholdManager","_s","items","setItems","overrides","setOverrides","options","setOptions","colors","sizes","color_to_sizes","size_to_colors","loading","setLoading","error","setError","itemName","setItemName","availableItemNames","setAvailableItemNames","size","setSize","color","setColor","threshold","setThreshold","history","setHistory","loadAll","response","fetch","data","json","list","Array","isArray","custom_thresholds","raw_thresholds","Object","entries","map","key","item_name","split","o","ok","oj","e","loadItemNames","res","names","key_items","k","name","filter","Boolean","sort","fetchOptions","encodeURIComponent","saveThreshold","form","FormData","append","String","method","body","Error","window","dispatchEvent","CustomEvent","loadHistory","resetThreshold","sizesForColor","colorsForSize","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","onFocus","onBlur","id","n","onClick","trim","s","c","t","parseInt","Number","isNaN","length","it","idx","defaultValue","min","newVal","h","i","_h$old_threshold","old_threshold","new_threshold","changed_at","_c","$RefreshReg$"],"sources":["/Users/SarthakSethi/SOFTWARE FOR DANIER /danier-stock-alert/frontend/src/components/ThresholdManager.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { API_BASE_URL } from '../config';\n\nconst ThresholdManager = () => {\n  const [items, setItems] = useState([]);\n  const [overrides, setOverrides] = useState([]);\n  const [options, setOptions] = useState({ colors: [], sizes: [], color_to_sizes: {}, size_to_colors: {} });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Create form state\n  const [itemName, setItemName] = useState('');\n  const [availableItemNames, setAvailableItemNames] = useState([]);\n  const [size, setSize] = useState('');\n  const [color, setColor] = useState('');\n  const [threshold, setThreshold] = useState('');\n\n  // History\n  const [history, setHistory] = useState([]);\n\n  const loadAll = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch(`${API_BASE_URL}/thresholds/all`);\n      const data = await response.json();\n      let list = [];\n      if (Array.isArray(data.custom_thresholds)) {\n        list = data.custom_thresholds;\n      } else if (data.raw_thresholds && typeof data.raw_thresholds === 'object') {\n        list = Object.entries(data.raw_thresholds).map(([key, threshold]) => {\n          const [item_name, size, color] = key.split('|');\n          return { key, item_name, size, color, threshold };\n        });\n      }\n      setItems(list);\n      // Try to fetch overrides directly (if backend deployed)\n      try {\n        const o = await fetch(`${API_BASE_URL}/thresholds/overrides`);\n        if (o.ok) {\n          const oj = await o.json();\n          setOverrides(oj.overrides || []);\n        }\n      } catch {}\n    } catch (e) {\n      setError('Failed to load thresholds');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => { loadAll(); }, []);\n\n  const loadItemNames = async () => {\n    try {\n      const res = await fetch(`${API_BASE_URL}/key-items/summary`);\n      const data = await res.json();\n      const names = (data.key_items || []).map(k => k.name).filter(Boolean).sort();\n      setAvailableItemNames(names);\n    } catch {}\n  };\n\n  const fetchOptions = async (name) => {\n    try {\n      const res = await fetch(`${API_BASE_URL}/key-items/options/${encodeURIComponent(name)}`);\n      const data = await res.json();\n      setOptions({\n        colors: data.colors || [],\n        sizes: data.sizes || [],\n        color_to_sizes: data.color_to_sizes || {},\n        size_to_colors: data.size_to_colors || {}\n      });\n    } catch (e) {\n      setOptions({ colors: [], sizes: [], color_to_sizes: {}, size_to_colors: {} });\n    }\n  };\n\n  const saveThreshold = async (itemName, size, color, threshold) => {\n    const form = new FormData();\n    form.append('item_name', itemName);\n    form.append('size', size);\n    form.append('color', color);\n    form.append('threshold', String(threshold));\n    const response = await fetch(`${API_BASE_URL}/thresholds/set`, { method: 'POST', body: form });\n    if (!response.ok) throw new Error('Failed to save');\n    window.dispatchEvent(new CustomEvent('thresholdsUpdated'));\n    await loadAll();\n    await loadHistory(itemName);\n  };\n\n  const resetThreshold = async (itemName, size, color) => {\n    const response = await fetch(`${API_BASE_URL}/thresholds/reset/${encodeURIComponent(itemName)}/${encodeURIComponent(size)}/${encodeURIComponent(color)}`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) throw new Error('Failed to reset');\n    window.dispatchEvent(new CustomEvent('thresholdsUpdated'));\n    await loadAll();\n    await loadHistory(itemName);\n  };\n\n  const loadHistory = async (name) => {\n    try {\n      const res = await fetch(`${API_BASE_URL}/thresholds/history?item_name=${encodeURIComponent(name)}&limit=50`);\n      if (!res.ok) { setHistory([]); return; }\n      const data = await res.json();\n      setHistory(data.history || []);\n    } catch { setHistory([]); }\n  };\n\n  // Derived filtered options for UX\n  const sizesForColor = color && options.color_to_sizes[color] ? options.color_to_sizes[color] : options.sizes;\n  const colorsForSize = size && options.size_to_colors[size] ? options.size_to_colors[size] : options.colors;\n\n  return (\n    <div className=\"p-6\">\n      <h2 className=\"text-xl font-semibold mb-4\">Threshold Manager</h2>\n      {loading && <div>Loading...</div>}\n      {error && <div className=\"text-red-600 text-sm\">{error}</div>}\n\n      {/* Create / Update Form */}\n      <div className=\"bg-white rounded border p-4 mb-6\">\n        <h3 className=\"font-semibold mb-3\">Create or Update Threshold</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-2 items-center\">\n          <div className=\"col-span-2 flex gap-2\">\n            <input\n              type=\"text\"\n              value={itemName}\n              onChange={(e) => { setItemName(e.target.value); setSize(''); setColor(''); setOptions({ colors: [], sizes: [], color_to_sizes: {}, size_to_colors: {} }); }}\n              placeholder=\"Item name (e.g., RONAN)\"\n              className=\"flex-1 border rounded px-3 py-2\"\n              onFocus={loadItemNames}\n              onBlur={() => { /* keep */ }}\n              list=\"itemNames\"\n            />\n            <datalist id=\"itemNames\">\n              {availableItemNames.map(n => <option key={n} value={n} />)}\n            </datalist>\n            <button className=\"px-3 py-2 border rounded\" onClick={() => { if (itemName.trim()) { fetchOptions(itemName.trim()); loadHistory(itemName.trim()); } }}>Options</button>\n          </div>\n          <select value={size} onChange={(e)=> setSize(e.target.value)} className=\"border rounded px-2 py-2\">\n            <option value=\"\">Size</option>\n            {sizesForColor.map((s) => (<option key={s} value={s}>{s}</option>))}\n          </select>\n          <select value={color} onChange={(e)=> setColor(e.target.value)} className=\"border rounded px-2 py-2\">\n            <option value=\"\">Color</option>\n            {colorsForSize.map((c) => (<option key={c} value={c}>{c}</option>))}\n          </select>\n          <input type=\"number\" value={threshold} onChange={(e)=> setThreshold(e.target.value)} placeholder=\"Threshold\" className=\"border rounded px-2 py-2\" />\n          <button\n            className=\"px-4 py-2 bg-blue-600 text-white rounded\"\n            onClick={async ()=>{\n              const t = parseInt(threshold, 10);\n              if (!itemName || !size || !color || Number.isNaN(t) || t < 0) return;\n              try { await saveThreshold(itemName.trim(), size, color, t); } catch {}\n            }}\n          >Save</button>\n        </div>\n        <div className=\"text-xs text-gray-500 mt-2\">Options: colors {options.colors.length}, sizes {options.sizes.length}</div>\n      </div>\n\n      {/* Existing Overrides */}\n      <div className=\"mb-6\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <h3 className=\"font-semibold\">Existing Overrides</h3>\n          <button onClick={loadAll} className=\"px-3 py-2 bg-blue-600 text-white rounded\">Refresh</button>\n        </div>\n        {items.length === 0 ? (\n          <div className=\"text-gray-600 text-sm\">No custom thresholds set yet.</div>\n        ) : (\n          <ul className=\"space-y-2\">\n            {items.map((it, idx) => (\n              <li key={idx} className=\"border rounded p-3\">\n                <div className=\"font-semibold\">{it.item_name}</div>\n                <div className=\"text-sm text-gray-600\">{it.size} • {it.color}</div>\n                <div className=\"mt-2 flex items-center gap-2\">\n                  <input\n                    type=\"number\"\n                    defaultValue={it.threshold}\n                    min=\"0\"\n                    className=\"w-24 border rounded px-2 py-1 text-sm\"\n                    onBlur={async (e) => {\n                      const newVal = parseInt(e.target.value, 10);\n                      if (!Number.isNaN(newVal) && newVal >= 0 && newVal !== it.threshold) {\n                        try { await saveThreshold(it.item_name, it.size, it.color, newVal); } catch {}\n                      }\n                    }}\n                  />\n                  <button className=\"px-2 py-1 border rounded\" onClick={() => fetchOptions(it.item_name)}>Options</button>\n                  <button className=\"px-2 py-1 border rounded\" onClick={() => resetThreshold(it.item_name, it.size, it.color)}>Reset</button>\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n\n      {/* History */}\n      <div>\n        <h3 className=\"font-semibold mb-2\">Recent Changes {itemName ? `(for ${itemName})` : ''}</h3>\n        {history.length === 0 ? (\n          <div className=\"text-gray-600 text-sm\">No history yet.</div>\n        ) : (\n          <ul className=\"space-y-1 text-sm\">\n            {history.map((h, i) => (\n              <li key={i} className=\"border rounded p-2\">\n                <div className=\"font-medium\">{h.item_name} • {h.size} • {h.color}</div>\n                <div className=\"text-gray-700\">{h.old_threshold ?? 'default'} → {h.new_threshold} at {h.changed_at}</div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ThresholdManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}