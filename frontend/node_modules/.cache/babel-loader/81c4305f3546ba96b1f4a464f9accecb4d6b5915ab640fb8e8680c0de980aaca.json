{"ast":null,"code":"import axios from'axios';import{API_BASE_URL}from'../config';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Health check\nexport const checkHealth=async signal=>{const response=await api.get('/health',{signal});return response.data;};// Upload inventory report\nexport const uploadReport=async file=>{const formData=new FormData();formData.append('file',file);const response=await api.post('/upload-report',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;};// Get today's alerts\nexport const getTodayAlerts=async()=>{const response=await api.get('/alerts/today');return response.data;};// Get recipients\nexport const getRecipients=async()=>{const response=await api.get('/recipients');return response.data;};// Add recipient\nexport const addRecipient=async(email,name,department)=>{const formData=new FormData();formData.append('email',email);if(name)formData.append('name',name);if(department)formData.append('department',department);const response=await api.post('/recipients',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;};// Update recipient\nexport const updateRecipient=async(email,name,department)=>{const formData=new FormData();if(name)formData.append('name',name);if(department)formData.append('department',department);const response=await api.put(`/recipients/${email}`,formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;};// Delete recipient\nexport const deleteRecipient=async email=>{const response=await api.delete(`/recipients/${email}`);return response.data;};// Get threshold setting\nexport const getThreshold=async()=>{const response=await api.get('/settings/threshold');return response.data;};// Get upload history\nexport const getUploadHistory=async()=>{const response=await api.get('/upload-history');return response.data;};// Get key items list\nexport const getKeyItemsList=async()=>{const response=await api.get('/key-items/list');return response.data;};// Get specific key item alerts\nexport const getSpecificKeyItemAlerts=async itemName=>{const response=await api.get(`/key-items/${itemName}/alerts`);return response.data;};// Email management functions\nexport const sendEmailAlert=async function(){let itemName=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;const formData=new FormData();if(itemName)formData.append('item_name',itemName);const response=await api.post('/email/send-alert',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;};export const sendItemSpecificAlert=async itemName=>{const response=await api.post(`/email/send-item-alert/${itemName}`);return response.data;};export const getEmailStatus=async()=>{const response=await api.get('/email/status');return response.data;};// Enhanced file management and comparison functions\nexport const getEnhancedInventoryFiles=async()=>{const response=await api.get('/files/enhanced-list');return response.data;};export const getSmartPerformanceAnalysis=async(file1,file2)=>{const response=await api.get(`/files/smart-analysis/${file1}/${file2}`);return response.data;};export const getPerformanceAnalysis=async()=>{const response=await api.get('/files/performance-analysis');return response.data;};export const getFileArchive=async()=>{const response=await api.get('/files/archive');return response.data;};export const downloadArchiveFile=async filename=>{const response=await api.get(`/files/archive/${filename}/download`,{responseType:'blob'});return response.data;};export const getFileAlerts=async filename=>{const response=await api.get(`/inventory-files/${filename}/alerts`);return response.data;};// Get all key items with alerts in a single batch request\nexport const getAllKeyItemsWithAlerts=async()=>{const response=await api.get('/key-items/batch-alerts');return response.data;};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","checkHealth","signal","response","get","data","uploadReport","file","formData","FormData","append","post","getTodayAlerts","getRecipients","addRecipient","email","name","department","updateRecipient","put","deleteRecipient","delete","getThreshold","getUploadHistory","getKeyItemsList","getSpecificKeyItemAlerts","itemName","sendEmailAlert","arguments","length","undefined","sendItemSpecificAlert","getEmailStatus","getEnhancedInventoryFiles","getSmartPerformanceAnalysis","file1","file2","getPerformanceAnalysis","getFileArchive","downloadArchiveFile","filename","responseType","getFileAlerts","getAllKeyItemsWithAlerts"],"sources":["/Users/SarthakSethi/SOFTWARE FOR DANIER /danier-stock-alert/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport { API_BASE_URL } from '../config';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Health check\nexport const checkHealth = async (signal) => {\n  const response = await api.get('/health', { signal });\n  return response.data;\n};\n\n// Upload inventory report\nexport const uploadReport = async (file) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  \n  const response = await api.post('/upload-report', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n  return response.data;\n};\n\n// Get today's alerts\nexport const getTodayAlerts = async () => {\n  const response = await api.get('/alerts/today');\n  return response.data;\n};\n\n// Get recipients\nexport const getRecipients = async () => {\n  const response = await api.get('/recipients');\n  return response.data;\n};\n\n// Add recipient\nexport const addRecipient = async (email, name, department) => {\n  const formData = new FormData();\n  formData.append('email', email);\n  if (name) formData.append('name', name);\n  if (department) formData.append('department', department);\n  \n  const response = await api.post('/recipients', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n  return response.data;\n};\n\n// Update recipient\nexport const updateRecipient = async (email, name, department) => {\n  const formData = new FormData();\n  if (name) formData.append('name', name);\n  if (department) formData.append('department', department);\n  \n  const response = await api.put(`/recipients/${email}`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n  return response.data;\n};\n\n// Delete recipient\nexport const deleteRecipient = async (email) => {\n  const response = await api.delete(`/recipients/${email}`);\n  return response.data;\n};\n\n// Get threshold setting\nexport const getThreshold = async () => {\n  const response = await api.get('/settings/threshold');\n  return response.data;\n};\n\n// Get upload history\nexport const getUploadHistory = async () => {\n  const response = await api.get('/upload-history');\n  return response.data;\n};\n\n// Get key items list\nexport const getKeyItemsList = async () => {\n  const response = await api.get('/key-items/list');\n  return response.data;\n};\n\n// Get specific key item alerts\nexport const getSpecificKeyItemAlerts = async (itemName) => {\n  const response = await api.get(`/key-items/${itemName}/alerts`);\n  return response.data;\n};\n\n// Email management functions\nexport const sendEmailAlert = async (itemName = null) => {\n  const formData = new FormData();\n  if (itemName) formData.append('item_name', itemName);\n  \n  const response = await api.post('/email/send-alert', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n  return response.data;\n};\n\nexport const sendItemSpecificAlert = async (itemName) => {\n  const response = await api.post(`/email/send-item-alert/${itemName}`);\n  return response.data;\n};\n\nexport const getEmailStatus = async () => {\n  const response = await api.get('/email/status');\n  return response.data;\n};\n\n// Enhanced file management and comparison functions\nexport const getEnhancedInventoryFiles = async () => {\n  const response = await api.get('/files/enhanced-list');\n  return response.data;\n};\n\nexport const getSmartPerformanceAnalysis = async (file1, file2) => {\n  const response = await api.get(`/files/smart-analysis/${file1}/${file2}`);\n  return response.data;\n};\n\nexport const getPerformanceAnalysis = async () => {\n  const response = await api.get('/files/performance-analysis');\n  return response.data;\n};\n\nexport const getFileArchive = async () => {\n  const response = await api.get('/files/archive');\n  return response.data;\n};\n\nexport const downloadArchiveFile = async (filename) => {\n  const response = await api.get(`/files/archive/${filename}/download`, {\n    responseType: 'blob'\n  });\n  return response.data;\n};\n\nexport const getFileAlerts = async (filename) => {\n  const response = await api.get(`/inventory-files/${filename}/alerts`);\n  return response.data;\n};\n\n// Get all key items with alerts in a single batch request\nexport const getAllKeyItemsWithAlerts = async () => {\n  const response = await api.get('/key-items/batch-alerts');\n  return response.data;\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}