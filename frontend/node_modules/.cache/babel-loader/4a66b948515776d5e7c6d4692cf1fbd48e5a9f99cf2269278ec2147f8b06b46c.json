{"ast":null,"code":"import React,{useEffect,useState}from'react';import{API_BASE_URL}from'../config';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ThresholdManager=()=>{const[items,setItems]=useState([]);const[options,setOptions]=useState({colors:[],sizes:[]});const[loading,setLoading]=useState(false);const[error,setError]=useState('');const loadAll=async()=>{setLoading(true);setError('');try{const response=await fetch(`${API_BASE_URL}/thresholds/all`);const data=await response.json();// Backend returns { custom_thresholds: [ { item_name, size, color, threshold, key } ], raw_thresholds: {\"item|size|color\": n} }\nlet list=[];if(Array.isArray(data.custom_thresholds)){list=data.custom_thresholds;}else if(data.raw_thresholds&&typeof data.raw_thresholds==='object'){list=Object.entries(data.raw_thresholds).map(_ref=>{let[key,threshold]=_ref;const[item_name,size,color]=key.split('|');return{key,item_name,size,color,threshold};});}setItems(list);}catch(e){setError('Failed to load thresholds');}finally{setLoading(false);}};useEffect(()=>{loadAll();},[]);const fetchOptions=async name=>{try{const res=await fetch(`${API_BASE_URL}/key-items/options/${encodeURIComponent(name)}`);const data=await res.json();setOptions({colors:data.colors||[],sizes:data.sizes||[]});}catch(e){// ignore\n}};const saveThreshold=async(itemName,size,color,threshold)=>{const form=new FormData();form.append('item_name',itemName);form.append('size',size);form.append('color',color);form.append('threshold',String(threshold));const response=await fetch(`${API_BASE_URL}/thresholds/set`,{method:'POST',body:form});if(!response.ok)throw new Error('Failed to save');// Notify listeners and reload\nwindow.dispatchEvent(new CustomEvent('thresholdsUpdated'));await loadAll();};const resetThreshold=async(itemName,size,color)=>{const response=await fetch(`${API_BASE_URL}/thresholds/reset/${encodeURIComponent(itemName)}/${encodeURIComponent(size)}/${encodeURIComponent(color)}`,{method:'DELETE'});if(!response.ok)throw new Error('Failed to reset');window.dispatchEvent(new CustomEvent('thresholdsUpdated'));await loadAll();};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:\"Threshold Manager\"}),loading&&/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"text-red-600 text-sm\",children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:loadAll,className:\"px-3 py-2 bg-blue-600 text-white rounded mb-4\",children:\"Refresh\"}),items.length===0&&!loading&&/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-600 text-sm\",children:\"No custom thresholds set yet.\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"space-y-2\",children:items.map((it,idx)=>/*#__PURE__*/_jsxs(\"li\",{className:\"border rounded p-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-semibold\",children:it.item_name}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600\",children:[it.size,\" \\u2022 \",it.color]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",defaultValue:it.threshold,min:\"0\",className:\"w-24 border rounded px-2 py-1 text-sm\",onBlur:async e=>{const newVal=parseInt(e.target.value,10);if(!Number.isNaN(newVal)&&newVal>=0&&newVal!==it.threshold){try{await saveThreshold(it.item_name,it.size,it.color,newVal);}catch{// ignore single error\n}}}}),/*#__PURE__*/_jsx(\"button\",{className:\"px-2 py-1 border rounded\",onClick:()=>fetchOptions(it.item_name),children:\"Options\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-2 py-1 border rounded\",onClick:()=>resetThreshold(it.item_name,it.size,it.color),children:\"Reset\"})]})]},idx))}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 text-sm\",children:[\"Options: colors \",options.colors.length,\", sizes \",options.sizes.length]})]});};export default ThresholdManager;","map":{"version":3,"names":["React","useEffect","useState","API_BASE_URL","jsx","_jsx","jsxs","_jsxs","ThresholdManager","items","setItems","options","setOptions","colors","sizes","loading","setLoading","error","setError","loadAll","response","fetch","data","json","list","Array","isArray","custom_thresholds","raw_thresholds","Object","entries","map","_ref","key","threshold","item_name","size","color","split","e","fetchOptions","name","res","encodeURIComponent","saveThreshold","itemName","form","FormData","append","String","method","body","ok","Error","window","dispatchEvent","CustomEvent","resetThreshold","className","children","onClick","length","it","idx","type","defaultValue","min","onBlur","newVal","parseInt","target","value","Number","isNaN"],"sources":["/Users/SarthakSethi/SOFTWARE FOR DANIER /danier-stock-alert/frontend/src/components/ThresholdManager.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { API_BASE_URL } from '../config';\n\nconst ThresholdManager = () => {\n  const [items, setItems] = useState([]);\n  const [options, setOptions] = useState({ colors: [], sizes: [] });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const loadAll = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch(`${API_BASE_URL}/thresholds/all`);\n      const data = await response.json();\n      // Backend returns { custom_thresholds: [ { item_name, size, color, threshold, key } ], raw_thresholds: {\"item|size|color\": n} }\n      let list = [];\n      if (Array.isArray(data.custom_thresholds)) {\n        list = data.custom_thresholds;\n      } else if (data.raw_thresholds && typeof data.raw_thresholds === 'object') {\n        list = Object.entries(data.raw_thresholds).map(([key, threshold]) => {\n          const [item_name, size, color] = key.split('|');\n          return { key, item_name, size, color, threshold };\n        });\n      }\n      setItems(list);\n    } catch (e) {\n      setError('Failed to load thresholds');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => { loadAll(); }, []);\n\n  const fetchOptions = async (name) => {\n    try {\n      const res = await fetch(`${API_BASE_URL}/key-items/options/${encodeURIComponent(name)}`);\n      const data = await res.json();\n      setOptions({ colors: data.colors || [], sizes: data.sizes || [] });\n    } catch (e) {\n      // ignore\n    }\n  };\n\n  const saveThreshold = async (itemName, size, color, threshold) => {\n    const form = new FormData();\n    form.append('item_name', itemName);\n    form.append('size', size);\n    form.append('color', color);\n    form.append('threshold', String(threshold));\n    const response = await fetch(`${API_BASE_URL}/thresholds/set`, { method: 'POST', body: form });\n    if (!response.ok) throw new Error('Failed to save');\n    // Notify listeners and reload\n    window.dispatchEvent(new CustomEvent('thresholdsUpdated'));\n    await loadAll();\n  };\n\n  const resetThreshold = async (itemName, size, color) => {\n    const response = await fetch(`${API_BASE_URL}/thresholds/reset/${encodeURIComponent(itemName)}/${encodeURIComponent(size)}/${encodeURIComponent(color)}`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) throw new Error('Failed to reset');\n    window.dispatchEvent(new CustomEvent('thresholdsUpdated'));\n    await loadAll();\n  };\n\n  return (\n    <div className=\"p-6\">\n      <h2 className=\"text-xl font-semibold mb-4\">Threshold Manager</h2>\n      {loading && <div>Loading...</div>}\n      {error && <div className=\"text-red-600 text-sm\">{error}</div>}\n      <button onClick={loadAll} className=\"px-3 py-2 bg-blue-600 text-white rounded mb-4\">Refresh</button>\n\n      {items.length === 0 && !loading && (\n        <div className=\"text-gray-600 text-sm\">No custom thresholds set yet.</div>\n      )}\n\n      <ul className=\"space-y-2\">\n        {items.map((it, idx) => (\n          <li key={idx} className=\"border rounded p-3\">\n            <div className=\"font-semibold\">{it.item_name}</div>\n            <div className=\"text-sm text-gray-600\">{it.size} â€¢ {it.color}</div>\n            <div className=\"mt-2 flex items-center gap-2\">\n              <input\n                type=\"number\"\n                defaultValue={it.threshold}\n                min=\"0\"\n                className=\"w-24 border rounded px-2 py-1 text-sm\"\n                onBlur={async (e) => {\n                  const newVal = parseInt(e.target.value, 10);\n                  if (!Number.isNaN(newVal) && newVal >= 0 && newVal !== it.threshold) {\n                    try {\n                      await saveThreshold(it.item_name, it.size, it.color, newVal);\n                    } catch {\n                      // ignore single error\n                    }\n                  }\n                }}\n              />\n              <button className=\"px-2 py-1 border rounded\" onClick={() => fetchOptions(it.item_name)}>Options</button>\n              <button className=\"px-2 py-1 border rounded\" onClick={() => resetThreshold(it.item_name, it.size, it.color)}>Reset</button>\n            </div>\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"mt-4 text-sm\">\n        Options: colors {options.colors.length}, sizes {options.sizes.length}\n      </div>\n    </div>\n  );\n};\n\nexport default ThresholdManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}